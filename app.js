// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log("üöÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...");

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = null;
let gameState = {
    currentStage: 1,
    score: 0,
    timeLeft: 2700,
    timerInterval: null,
    isGameActive: false
};

// –ü—Ä–æ—Å—Ç—ã–µ —ç—Ç–∞–ø—ã –¥–ª—è —Ç–µ—Å—Ç–∞
const stages = {
    1: {
        title: "üçé –≠–¢–ê–ü 1: –ó–ê–†–ê–ñ–ï–ù–ò–ï",
        description: "–ù–∞–π–¥–∏—Ç–µ –∑–∞—Ä–∞–∂–µ–Ω–Ω–æ–µ —è–±–ª–æ–∫–æ —Å –∫–æ–¥–æ–º.",
        task: "–ö–æ–¥: –ó–ê–†–ê–ñ–ï–ù–ò–ï_2024",
        answer: "–ó–ê–†–ê–ñ–ï–ù–ò–ï_2024",
        points: 100
    },
    2: {
        title: "ü•ö –≠–¢–ê–ü 2: –¢–ê–ô–ù–ê –Ø–ò–¶", 
        description: "–†–∞—Å—à–∏—Ñ—Ä—É–π—Ç–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ —è–π—Ü–∞—Ö.",
        task: "–°–∏–º–≤–æ–ª—ã: Œ©‚Ä†‚àû¬§¬ß",
        answer: "Œ©‚Ä†‚àû¬§¬ß",
        points: 150
    }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initializeApp() {
    console.log("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
        if (window.Telegram && window.Telegram.WebApp) {
            tg = window.Telegram.WebApp;
            tg.expand();
            console.log("‚úÖ Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        } else {
            console.log("‚ö†Ô∏è Telegram Web App –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ");
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            hideScreen('loading');
            showScreen('main');
            console.log("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ");
        }, 1000);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        setupEventListeners();
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", error);
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        hideScreen('loading');
        showScreen('main');
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    console.log("üñ• –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω:", screenId);
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

function hideScreen(screenId) {
    document.getElementById(screenId).classList.remove('active');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    console.log("üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...");
    
    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const startBtn = document.getElementById('start-btn');
    const howToPlayBtn = document.getElementById('how-to-play-btn');
    
    if (startBtn) {
        startBtn.addEventListener('click', startGame);
        console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è start-btn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    }
    
    if (howToPlayBtn) {
        howToPlayBtn.addEventListener('click', showInstructions);
        console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è how-to-play-btn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    }
    
    // –ò–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω
    const backBtn = document.getElementById('back-btn');
    const submitAnswer = document.getElementById('submit-answer');
    const answerInput = document.getElementById('answer-input');
    const backFromInstructions = document.getElementById('back-from-instructions');
    
    if (backBtn) backBtn.addEventListener('click', showMainMenu);
    if (submitAnswer) submitAnswer.addEventListener('click', checkAnswer);
    if (backFromInstructions) backFromInstructions.addEventListener('click', showMainMenu);
    
    // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    if (answerInput) {
        answerInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') checkAnswer();
        });
    }
    
    console.log("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
}

// –ò–≥—Ä–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function startGame() {
    console.log("üéÆ –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É");
    
    gameState = {
        currentStage: 1,
        score: 0,
        timeLeft: 2700,
        isGameActive: true
    };
    
    showScreen('game');
    loadStage(1);
    updateStats();
}

function showMainMenu() {
    console.log("üè† –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
    if (gameState.isGameActive) {
        clearInterval(gameState.timerInterval);
        gameState.isGameActive = false;
    }
    showScreen('main');
}

function showInstructions() {
    console.log("üìö –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏");
    showScreen('instructions');
}

function loadStage(stageNumber) {
    console.log("üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Ç–∞–ø:", stageNumber);
    
    const stage = stages[stageNumber];
    if (!stage) {
        endGame();
        return;
    }
    
    const stageContent = document.getElementById('stage-content');
    if (!stageContent) {
        console.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç stage-content –Ω–µ –Ω–∞–π–¥–µ–Ω");
        return;
    }
    
    stageContent.innerHTML = `
        <div class="stage-header">
            <h3>${stage.title}</h3>
            <p>${stage.description}</p>
        </div>
        <div class="stage-task">
            <h4>üéØ –ó–∞–¥–∞—á–∞:</h4>
            <p>${stage.task}</p>
        </div>
        <div class="input-section">
            <input type="text" id="answer-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç..." value="">
            <button id="submit-answer" class="btn-primary">–ü–†–û–í–ï–†–ò–¢–¨</button>
        </div>
    `;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const newSubmitAnswer = document.getElementById('submit-answer');
    const newAnswerInput = document.getElementById('answer-input');
    
    if (newSubmitAnswer) {
        newSubmitAnswer.addEventListener('click', checkAnswer);
    }
    
    if (newAnswerInput) {
        newAnswerInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') checkAnswer();
        });
        newAnswerInput.focus();
    }
    
    document.getElementById('current-stage').textContent = stageNumber;
    updateStats();
}

function checkAnswer() {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç...");
    
    const input = document.getElementById('answer-input');
    if (!input) {
        console.error("‚ùå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
        return;
    }
    
    const userAnswer = input.value.trim();
    const currentStage = stages[gameState.currentStage];
    
    if (!userAnswer) {
        showMessage('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç!', 'error');
        return;
    }
    
    if (userAnswer.toUpperCase() === currentStage.answer) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        gameState.score += currentStage.points;
        gameState.currentStage++;
        
        showMessage('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ!', 'success');
        
        setTimeout(() => {
            if (gameState.currentStage <= Object.keys(stages).length) {
                loadStage(gameState.currentStage);
            } else {
                endGame();
            }
            updateStats();
        }, 1500);
        
    } else {
        // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        showMessage('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        input.value = '';
        input.focus();
    }
}

function showMessage(text, type) {
    console.log("üí¨ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:", text);
    
    const message = document.createElement('div');
    message.className = `message ${type}`;
    message.textContent = text;
    message.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px 30px;
        border-radius: 10px;
        z-index: 1000;
        font-weight: bold;
        background: ${type === 'success' ? '#48bb78' : '#f56565'};
        color: white;
        text-align: center;
        min-width: 250px;
    `;
    
    document.body.appendChild(message);
    
    setTimeout(() => {
        if (message.parentNode) {
            message.parentNode.removeChild(message);
        }
    }, 2000);
}

function updateStats() {
    const stageCounter = document.getElementById('stage-counter');
    const scoreCounter = document.getElementById('score-counter');
    
    if (stageCounter) {
        stageCounter.textContent = `${gameState.currentStage - 1}/${Object.keys(stages).length}`;
    }
    
    if (scoreCounter) {
        scoreCounter.textContent = gameState.score;
    }
}

function endGame() {
    console.log("üéâ –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É");
    
    clearInterval(gameState.timerInterval);
    gameState.isGameActive = false;
    
    const stageContent = document.getElementById('stage-content');
    if (stageContent) {
        stageContent.innerHTML = `
            <div class="game-complete">
                <h2>üéâ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h2>
                <p>–í—ã –ø—Ä–æ—à–ª–∏ ${gameState.currentStage - 1} –∏–∑ ${Object.keys(stages).length} —ç—Ç–∞–ø–æ–≤!</p>
                <p>üèÜ –û—á–∫–æ–≤: ${gameState.score}</p>
                <button onclick="showMainMenu()" class="btn-primary">–í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</button>
            </div>
        `;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', function() {
    console.log("üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω");
    initializeApp();
});

// –ï—Å–ª–∏ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É
if (document.readyState === 'complete' || document.readyState === 'interactive') {
    console.log("‚ö° DOM —É–∂–µ –≥–æ—Ç–æ–≤");
    setTimeout(initializeApp, 0);
}
