// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
let gameState = {
    currentStage: 1,
    score: 0,
    timeLeft: 2700, // 45 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    timerInterval: null,
    isGameActive: false
};

// –î–∞–Ω–Ω—ã–µ —ç—Ç–∞–ø–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
const stages = {
    1: {
        title: "üçé –ó–ê–†–ê–ñ–ï–ù–ò–ï",
        description: "–ë–µ–∑—É–º–Ω—ã–π —É—á–µ–Ω—ã–π –ê–≥—Ä–∏—É—Å –ø—Ä–æ–≤–µ–ª –Ω–µ—É–¥–∞—á–Ω—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç! –í—Å–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –Ω–∞ —Ñ–µ—Ä–º–µ —Å—Ç–∞–ª–∏ –∑–æ–º–±–∏. –ù–∞–π–¥–∏—Ç–µ –∑–∞—Ä–∞–∂–µ–Ω–Ω–æ–µ —è–±–ª–æ–∫–æ —Å –∫–æ–¥–æ–º.",
        task: "üîç –ù–∞–π–¥–∏—Ç–µ —è–±–ª–æ–∫–æ —Å –∫–æ–¥–æ–º –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Ñ–µ—Ä–º—ã",
        hint: "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ª–æ–≤–∞ –∏ –≥–æ–¥–∞ —á–µ—Ä–µ–∑ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ",
        answer: "–ó–ê–†–ê–ñ–ï–ù–ò–ï_2024",
        points: 100
    },
    2: {
        title: "ü•ö –¢–ê–ô–ù–ê –Ø–ò–¶",
        description: "–ó–æ–º–±–∏-–∫—É—Ä—ã —Å–Ω–µ—Å–ª–∏ —è–π—Ü–∞ —Å–æ —Å—Ç—Ä–∞–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏! –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ —è–π—Ü–∞ –∏ —Ä–∞—Å—à–∏—Ñ—Ä—É–π—Ç–µ –∫–æ–¥.",
        task: "üîç –ù–∞–π–¥–∏—Ç–µ 5 —è–∏—Ü —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ –∫—É—Ä—è—Ç–Ω–∏–∫–µ",
        hint: "üí° –°–∏–º–≤–æ–ª—ã: Œ© ‚Ä† ‚àû ¬§ ¬ß",
        answer: "Œ©‚Ä†‚àû¬§¬ß",
        points: 150
    }
    // –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã...
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

function initializeApp() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
    tg.expand();
    tg.enableClosingConfirmation();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ Telegram
    tg.MainButton.setText("–°–û–•–†–ê–ù–ò–¢–¨ –ü–†–û–ì–†–ï–°–°");
    tg.MainButton.hide();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
        hideScreen('loading');
        showScreen('main');
    }, 2000);
    
    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
}

function setupEventListeners() {
    // –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    document.getElementById('start-btn').addEventListener('click', startGame);
    document.getElementById('how-to-play-btn').addEventListener('click', showInstructions);
    
    // –ò–≥—Ä–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
    document.getElementById('back-btn').addEventListener('click', showMainMenu);
    document.getElementById('submit-answer').addEventListener('click', checkAnswer);
    document.getElementById('back-from-instructions').addEventListener('click', showMainMenu);
    
    // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    document.getElementById('answer-input').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') checkAnswer();
    });
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active', 'fade-in');
}

function hideScreen(screenId) {
    document.getElementById(screenId).classList.remove('active');
}

function showMainMenu() {
    if (gameState.isGameActive) {
        stopGame();
    }
    showScreen('main');
    updateStats();
}

function showInstructions() {
    showScreen('instructions');
}

// –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
function startGame() {
    gameState = {
        currentStage: 1,
        score: 0,
        timeLeft: 2700,
        isGameActive: true
    };
    
    startTimer();
    showScreen('game');
    loadStage(1);
    updateStats();
}

function stopGame() {
    gameState.isGameActive = false;
    clearInterval(gameState.timerInterval);
    tg.MainButton.hide();
}

function loadStage(stageNumber) {
    const stage = stages[stageNumber];
    if (!stage) {
        endGame();
        return;
    }
    
    const stageContent = document.getElementById('stage-content');
    stageContent.innerHTML = `
        <div class="stage-header">
            <h3>${stage.title}</h3>
            <p>${stage.description}</p>
        </div>
        
        <div class="stage-task">
            <h4>üéØ –ó–∞–¥–∞—á–∞:</h4>
            <p>${stage.task}</p>
        </div>
        
        <div class="stage-hint">
            <h4>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:</h4>
            <p>${stage.hint}</p>
        </div>
    `;
    
    document.getElementById('current-stage').textContent = stageNumber;
    document.getElementById('answer-input').value = '';
    document.getElementById('answer-input').focus();
}

function checkAnswer() {
    const input = document.getElementById('answer-input');
    const userAnswer = input.value.trim().toUpperCase();
    const currentStage = stages[gameState.currentStage];
    
    if (!userAnswer) {
        showMessage('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç!', 'error');
        return;
    }
    
    if (userAnswer === currentStage.answer) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        gameState.score += currentStage.points;
        gameState.currentStage++;
        
        showMessage('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É!', 'success');
        
        setTimeout(() => {
            if (gameState.currentStage <= Object.keys(stages).length) {
                loadStage(gameState.currentStage);
            } else {
                endGame();
            }
            updateStats();
        }, 1500);
        
    } else {
        // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        showMessage('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        input.value = '';
        input.focus();
    }
}

function showMessage(text, type) {
    const message = document.createElement('div');
    message.className = `message ${type}`;
    message.textContent = text;
    message.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px 30px;
        border-radius: 10px;
        z-index: 1000;
        font-weight: bold;
        text-align: center;
        min-width: 250px;
    `;
    
    document.body.appendChild(message);
    
    setTimeout(() => {
        message.remove();
    }, 2000);
}

function startTimer() {
    clearInterval(gameState.timerInterval);
    gameState.timerInterval = setInterval(() => {
        if (gameState.isGameActive) {
            gameState.timeLeft--;
            updateTimerDisplay();
            
            if (gameState.timeLeft <= 0) {
                endGame();
            }
        }
    }, 1000);
}

function updateTimerDisplay() {
    const minutes = Math.floor(gameState.timeLeft / 60);
    const seconds = gameState.timeLeft % 60;
    document.getElementById('time').textContent = 
        `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
}

function updateStats() {
    document.getElementById('stage-counter').textContent = 
        `${gameState.currentStage - 1}/${Object.keys(stages).length}`;
    document.getElementById('score-counter').textContent = gameState.score;
}

function endGame() {
    stopGame();
    
    const stageContent = document.getElementById('stage-content');
    stageContent.innerHTML = `
        <div class="game-complete">
            <h2>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
            <p>–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∏–≥—Ä—É –∏ —Å–ø–∞—Å–ª–∏ —Ñ–µ—Ä–º—É!</p>
            <div class="final-stats">
                <p>üèÜ –ù–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤: <strong>${gameState.score}</strong></p>
                <p>üéØ –ü—Ä–æ–π–¥–µ–Ω–æ —ç—Ç–∞–ø–æ–≤: <strong>${gameState.currentStage - 1}/${Object.keys(stages).length}</strong></p>
            </div>
            <button onclick="showMainMenu()" class="btn-primary">–í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</button>
        </div>
    `;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    tg.sendData(JSON.stringify({
        action: 'game_complete',
        score: gameState.score,
        stages: gameState.currentStage - 1
    }));
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.showMainMenu = showMainMenu;
